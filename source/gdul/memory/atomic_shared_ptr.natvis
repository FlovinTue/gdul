<?xml version="1.0" encoding="utf-8"?>

<!-- Copyright(c) 2020 Flovin Michaelsen                                                  -->
<!--                                                                                      -->
<!-- Permission is hereby granted, free of charge, to any person obtaining a copy         -->
<!-- of this software and associated documentation files(the "Software"), to deal         -->
<!-- in the Software without restriction, including without limitation the rights         -->
<!-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell            -->
<!-- copies of the Software, and to permit persons to whom the Software is                -->
<!-- furnished to do so, subject to the following conditions :                            -->
<!--                                                                                      -->
<!-- The above copyright notice and this permission notice shall be included in all       -->
<!-- copies or substantial portions of the Software.                                      -->
<!--                                                                                      -->
<!-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR           -->
<!-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,             -->
<!-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE           -->
<!-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER               -->
<!-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,        -->
<!-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE        -->
<!-- SOFTWARE.                                                                            -->


<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <Type Name="gdul::raw_ptr&lt;*&gt;">
		<DisplayString Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) != 0">
      {*(decayed_type*)(((cb_free_type*)(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask))->m_ptrStorage.m_u64 &amp; asp_detail::Owned_Mask)}
    </DisplayString>
		<DisplayString Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) == 0">
			{(void*)0}
		</DisplayString>
    <Expand>
      <ExpandedItem Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) != 0 &amp;&amp; 
          (((cb_free_type*)(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask))->m_ptrStorage.m_u8[7] == 0)">
        (decayed_type*)(((cb_free_type*)(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask))->m_ptrStorage.m_u64 &amp; asp_detail::Owned_Mask)
      </ExpandedItem>
      <Item Name="[object]" Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) == 0">
        (void*)0
      </Item>
      <ArrayItems Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) != 0 &amp;&amp; 
          (((cb_free_type*)(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask))->m_ptrStorage.m_u8[7] != 0)">
        <Size>(*(size_t*)((m_controlBlockStorage.m_u64 + 24) &amp; asp_detail::Cb_Mask))</Size>
        <ValuePointer>(decayed_type*)(((cb_free_type*)(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask))->m_ptrStorage.m_u64 &amp; asp_detail::Owned_Mask)</ValuePointer>
      </ArrayItems>
      <Item Name="[**ptr_use_count]" Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) != 0">
        ((cb_free_type*)(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask))->m_useCount
      </Item>
      <Item Name="[**ptr_use_count]" Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) == 0">0UL</Item>
      <Item Name="[**ptr_local_refs]">(size_type)m_controlBlockStorage.m_u8[asp_detail::STORAGE_BYTE_LOCAL_REF]</Item>
      <Item Name="[**ptr_version]">(((size_type)m_controlBlockStorage.m_u8[asp_detail::STORAGE_BYTE_VERSION_UPPER]) &lt;&lt; asp_detail::Cb_Ptr_Bottom_Bits) | (((uint64_t)m_controlBlockStorage.m_u8[asp_detail::STORAGE_BYTE_VERSION_LOWER]) &amp; ~asp_detail::Cb_Mask)</Item>
    </Expand>
  </Type>

  <Type Name="gdul::shared_ptr&lt;*&gt;">
    <DisplayString Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) != 0">
      {*(decayed_type*)(((cb_free_type*)(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask))->m_ptrStorage.m_u64 &amp; asp_detail::Owned_Mask)}
    </DisplayString>
    <DisplayString Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) == 0">
      {(void*)0}
    </DisplayString>
    <Expand>
      <ExpandedItem Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) != 0 &amp;&amp; 
          (((cb_free_type*)(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask))->m_ptrStorage.m_u8[7] == 0)">
        m_ptr
      </ExpandedItem>
      <Item Name="[object]" Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) == 0">
        (void*)0
      </Item>
      <ArrayItems Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) != 0 &amp;&amp; 
          (((cb_free_type*)(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask))->m_ptrStorage.m_u8[7] != 0)">
        <Size>(*(size_t*)((m_controlBlockStorage.m_u64 + 24) &amp; asp_detail::Cb_Mask))</Size>
        <ValuePointer>m_ptr</ValuePointer>
      </ArrayItems>
      <Item Name="[**ptr_use_count]" Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) != 0">
        ((cb_free_type*)(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask))->m_useCount
      </Item>
      <Item Name="[**ptr_use_count]" Condition="(m_controlBlockStorage.m_u64 &amp; asp_detail::Cb_Mask) == 0">0UL</Item>
      <Item Name="[**ptr_local_refs]">(size_type)m_controlBlockStorage.m_u8[asp_detail::STORAGE_BYTE_LOCAL_REF]</Item>
      <Item Name="[**ptr_version]">(((size_type)m_controlBlockStorage.m_u8[asp_detail::STORAGE_BYTE_VERSION_UPPER]) &lt;&lt; asp_detail::Cb_Ptr_Bottom_Bits) | (((uint64_t)m_controlBlockStorage.m_u8[asp_detail::STORAGE_BYTE_VERSION_LOWER]) &amp; ~asp_detail::Cb_Mask)</Item>
    </Expand>
  </Type>

  <Type Name="gdul::atomic_shared_ptr&lt;*&gt;">
    <DisplayString Condition="(m_debugView.m_u64 &amp; asp_detail::Cb_Mask) != 0">
      {*(decayed_type*)(((cb_free_type*)(m_debugView.m_u64 &amp; asp_detail::Cb_Mask))->m_ptrStorage.m_u64 &amp; asp_detail::Owned_Mask)}
    </DisplayString>
    <DisplayString Condition="(m_debugView.m_u64 &amp; asp_detail::Cb_Mask) == 0">
      {(void*)0}
    </DisplayString>
    <Expand>
      <ExpandedItem Condition="(m_debugView.m_u64 &amp; asp_detail::Cb_Mask) != 0 &amp;&amp; 
          (((cb_free_type*)(m_debugView.m_u64 &amp; asp_detail::Cb_Mask))->m_ptrStorage.m_u8[7] == 0)">
        (decayed_type*)(((cb_free_type*)(m_debugView.m_u64 &amp; asp_detail::Cb_Mask))->m_ptrStorage.m_u64 &amp; asp_detail::Owned_Mask)
      </ExpandedItem>
      <Item Name="[object]" Condition="(m_debugView.m_u64 &amp; asp_detail::Cb_Mask) == 0">
        (void*)0
      </Item>
      <ArrayItems Condition="(m_debugView.m_u64 &amp; asp_detail::Cb_Mask) != 0 &amp;&amp; 
          (((cb_free_type*)(m_debugView.m_u64 &amp; asp_detail::Cb_Mask))->m_ptrStorage.m_u8[7] != 0)">
        <Size>(*(size_t*)((m_debugView.m_u64 + 24) &amp; asp_detail::Cb_Mask))</Size>
        <ValuePointer>(decayed_type*)(((cb_free_type*)(m_debugView.m_u64 &amp; asp_detail::Cb_Mask))->m_ptrStorage.m_u64 &amp; asp_detail::Owned_Mask)</ValuePointer>
      </ArrayItems>
      <Item Name="[**ptr_use_count]" Condition="(m_debugView.m_u64 &amp; asp_detail::Cb_Mask) != 0">
        ((cb_free_type*)(m_debugView.m_u64 &amp; asp_detail::Cb_Mask))->m_useCount
      </Item>
      <Item Name="[**ptr_use_count]" Condition="(m_debugView.m_u64 &amp; asp_detail::Cb_Mask) == 0">0UL</Item>
      <Item Name="[**ptr_local_refs]">(size_type)m_debugView.m_u8[asp_detail::STORAGE_BYTE_LOCAL_REF]</Item>
      <Item Name="[**ptr_version]">(((size_type)m_debugView.m_u8[asp_detail::STORAGE_BYTE_VERSION_UPPER]) &lt;&lt; asp_detail::Cb_Ptr_Bottom_Bits) | (((uint64_t)m_debugView.m_u8[asp_detail::STORAGE_BYTE_VERSION_LOWER]) &amp; ~asp_detail::Cb_Mask)</Item>
    </Expand>
  </Type>
	
</AutoVisualizer>
